<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEASABIAAD/2wBDAAQDAwMDAgQDAwMEBAQFBgoGBgUFBgwICQcKDgwPDg4MDQ0P
        ERYTDxAVEQ0NExoTFRcYGRkZDxIbHRsYHRYYGRj/2wBDAQQEBAYFBgsGBgsYEA0QGBgYGBgYGBgYGBgY
        GBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBj/wAARCAH0AyADASIAAhEBAxEB/8QA
        GwABAAIDAQEAAAAAAAAAAAAAAAUGAwQHAgH/xAA/EAEAAgEDAQUFBQUGBQUAAAAAAQIDBAURIQYSMUFR
        EyJhcZFSgaGxwRQjMkLRFRZTYnLhM3OCkvA0NUPC8f/EABsBAQADAQEBAQAAAAAAAAAAAAACAwQBBQYH
        /8QAKhEBAAICAgIBAwQCAwEAAAAAAAECAxEEIRIxQQUTUSIyYXEUkRVCgVL/2gAMAwEAAhEDEQA/AO6A
        Prn5uAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AAAAAAAAAAAAAAAAAAH/2Q==
</value>
  </data>
</root>